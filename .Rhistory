# labs & titles
xlab(x.lab) +
ylab("Lab") # +
# ggtitle(main.title)
if(CI.display){
p <- p +
scale_y_continuous(breaks = c(1, (5:(length(rma.fit$yi)+4))),
labels = c("RE Model", unique(as.character(rma.data$source))),
sec.axis = dup_axis(breaks = c(1, (5:(length(rma.fit$yi)+4))),
labels = c(paste0("[", round(rma.fit$b[1] - qnorm(ci.lvl)*rma.fit$se, 2), ";", round(rma.fit$b[1] + qnorm(ci.lvl)*rma.fit$se, 2), "]"),
paste0("[", round(cil, 2), ";", round(ciu, 2), "]")),
name = ""))
# p <- p + geom_text(aes(y = c(5:(length(rma.fit$yi)+4)), x = (max(ciu) + abs(max(ciu))*.05),
#               label = paste0("[", round(cil, 2), ";", round(ciu, 2), "]")))
}else{
p <- p +     # adjust labels on y-axis, to display lab-abreviations
scale_y_continuous(breaks = c(1, (5:(length(rma.fit$yi)+4))), labels = c("RE Model", unique(as.character(rma.data$source)))                         )
}
p
}
laymat <- matrix(c(1, 1, 1, 1, 2, 2, 2,
1, 1, 1, 1, 2, 2, 2,
1, 1, 1, 1, 2, 2, 2,
1, 1, 1, 1, 2, 2, 2,
1, 1, 1, 1, 2, 2, 2), byrow = T, ncol = 7)
AE <- Alpha_estimates.list[[27]]
AR <- Alpha_rma.list[[27]]
p <- my_forest_plot(rma.data = AE, rma.fit = AR, main.title = NULL,
x.lab = "Cronbach's Alpha", ci.lvl = .975, CI.display = FALSE)
p <- p + theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "grey"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA),
axis.text.y = element_text(size = 8))
bw_FD <- (2 * IQR(AE$Reliability))/length(AE$Reliability)^(1/3)
h <- ggplot(AE) +
geom_histogram(aes(x = Reliability),
binwidth = bw_FD,
colour = "black", fill = colours[3]) +
theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "transparent"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA)) +
labs(x = "Cronbach's Alpha", y = "Frequency")
gridExtra::grid.arrange(p, h, layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)),
margin = theme(plot.margin = unit(c(0,2,0,0), "cm")))
gridExtra::grid.arrange(p, h, layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)),
theme(plot.margin = unit(c(0,2,0,0), "cm")))
laymat <- matrix(c(1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2), byrow = T, ncol = 7)
laymat <- matrix(c(1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2), byrow = T, ncol = 8)
gridExtra::grid.arrange(p, h, "",  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
Forest_Histogram_HH <- gridExtra::grid.arrange(p, h, textGrob(""),  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
Forest_Histogram_HH <- gridExtra::grid.arrange(p, h, textGrob(""),  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
ggsave(
plot = Forest_Histogram_HH,
filename = here("Graphics/temp_Forest_Histogram.svg"),
bg = "transparent",
width = 9.5,
height = 6.5,
units = "in"
)
# library loading and installing as necessary
packages <- c("tidyverse", "here", "metafor", "grid", "gridExtra", "svglite")
# check, whether library already installed or not - install and load as needed:
apply(as.matrix(packages), MARGIN = 1, FUN = function(x) {
pkg_avail <- nzchar(system.file(package = x))   # check if library is installed on system
if(pkg_avail){
require(x, character.only = TRUE)             # load the library, if already installed
}else{
install.packages(x)                           # install the library, if missing
require(x, character.only = TRUE)             # load after installation
}
})
source(here("RG_function-library.R"))
colours <- c("#691d87", "#341d87", "#1d5987", "#1d874b", "#3b871d")
path_data <- list.files(here("Data/Extracted (Project) Data"), full.names = TRUE)
data.list <- sapply(path_data, read.csv)
Alpha_rma.list <- readRDS(file = here("Data/Shiny Data/Alpha_rma.list.RData"))
Bonett.Alpha_rma.list <- readRDS(file = here("Data/Shiny Data/Bonett.Alpha_rma.list.RData"))
Reliability_estimates_paths <- list.files(here("Data/Reliability Estimates"), full.names =  TRUE)
Alpha_estimates.list <- Reliability_estimates_paths[grep("_Alpha.csv$", Reliability_estimates_paths)][-7] %>%
lapply(., read.csv)
Bonett.Alpha_estimates.list <- Reliability_estimates_paths[grep("_Bonett-Alpha.csv$", Reliability_estimates_paths)][-7] %>%
lapply(., read.csv)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
alpha_tau <- sapply(Alpha_rma.list, FUN = function(x){
sqrt(x$tau2)
})
alpha_I2 <- sapply(Alpha_rma.list, FUN = function(x){
x$I2
})
alpha_het.sig <- sapply(Alpha_rma.list, FUN = function(x){
x$QEp <= .05
})
alpha_est <- sapply(Alpha_rma.list, FUN = function(x){
x$b[1]
})
sum(!alpha_het.sig, na.rm = T)
B.alpha_tau <- sapply(Bonett.Alpha_rma.list, FUN = function(x){
sqrt(x$tau2)
})
# 1-exp(B.alpha_tau)
B.alpha_I2 <- sapply(Bonett.Alpha_rma.list, FUN = function(x){
x$I2
})
B.alpha_het.sig <- sapply(Bonett.Alpha_rma.list, FUN = function(x){
x$QEp <= .05
})
B.alpha_est <- sapply(Bonett.Alpha_rma.list, FUN = function(x){
x$b[1]
})
sum(!B.alpha_het.sig, na.rm = T)
violin_df <- data.frame(tau = c(alpha_tau[-7], B.alpha_tau),
I2 = c(alpha_I2[-7], B.alpha_I2),
sig = c(alpha_het.sig[-7], B.alpha_het.sig),
stat = as.factor(c(rep(1, length(alpha_tau[-7])), rep(2, length(alpha_tau[-7])))),
est = c(alpha_est[-7], B.alpha_est))
my_forest_plot <- function(rma.fit, rma.data, main.title = "Forest Plot",
x.lab = "Estimate", ci.lvl = .975, CI.display = FALSE){
# Calculate lower and upper limits of confidence levels, for each replication's estimate
cil <- rma.fit$yi[1:length(rma.fit$yi)] - qnorm(ci.lvl)*sqrt(rma.fit$vi[1:length(rma.fit$vi)])
ciu <- rma.fit$yi[1:length(rma.fit$yi)] + qnorm(ci.lvl)*sqrt(rma.fit$vi[1:length(rma.fit$vi)])
# weights <- 1/sqrt(rma.fit$vi+rma.fit$tau2)
# weights.scaled <- weights/mean(weights)
# weights.rescaled <- weights.scaled/mean(weights.scaled)
p <- ggplot() + # initialize ggplot
# plot point estimates
geom_point(aes(x = rma.fit$yi, y = c(5:(length(rma.fit$yi)+4))
#                , size = weights.rescaled
), shape = 15) +
# vertical line at x = 0
# geom_vline(xintercept = 0, linetype = "dashed") +
# add horizontal line for CI of each replication's estimate
geom_segment(aes(x = cil, y = c(5:(length(rma.fit$yi)+4)), xend = ciu, yend = c(5:(length(rma.fit$yi)+4)))) +
# ggplot theme
theme_minimal() +
# plot meta analytic point estimate
geom_point(aes(x = rma.fit$b[1], y = 1), shape = 18) +
#add CI-line for meta-analytic point estimate
geom_segment(aes(x = rma.fit$b[1] - qnorm(ci.lvl)*rma.fit$se, y = 1,
xend = rma.fit$b[1] + qnorm(ci.lvl)*rma.fit$se, yend = 1)) +
# add vertical upper & lower-limit "fence"-lines, for each replication's estimate
geom_segment(aes(x = cil, xend = cil, y = (c(5:(length(rma.fit$yi)+4))+.3), yend = (c(5:(length(rma.fit$yi)+4))-.3) )) +
geom_segment(aes(x = ciu, xend = ciu, y = (c(5:(length(rma.fit$yi)+4))+.3), yend = (c(5:(length(rma.fit$yi)+4))-.3) )) +
# add vertical upper- & lower-limit "fence lines, for meta-analytic point estimate
geom_segment(aes(x = rma.fit$b[1] - qnorm(ci.lvl)*rma.fit$se, y = (1+.3),
xend = rma.fit$b[1] - qnorm(ci.lvl)*rma.fit$se, yend = (1-.3))) +
geom_segment(aes(x = rma.fit$b[1] + qnorm(ci.lvl)*rma.fit$se, y = (1+.3),
xend = rma.fit$b[1] + qnorm(ci.lvl)*rma.fit$se, yend = (1-.3))) +
# labs & titles
xlab(x.lab) +
ylab("Lab") # +
# ggtitle(main.title)
if(CI.display){
p <- p +
scale_y_continuous(breaks = c(1, (5:(length(rma.fit$yi)+4))),
labels = c("RE Model", unique(as.character(rma.data$source))),
sec.axis = dup_axis(breaks = c(1, (5:(length(rma.fit$yi)+4))),
labels = c(paste0("[", round(rma.fit$b[1] - qnorm(ci.lvl)*rma.fit$se, 2), ";", round(rma.fit$b[1] + qnorm(ci.lvl)*rma.fit$se, 2), "]"),
paste0("[", round(cil, 2), ";", round(ciu, 2), "]")),
name = ""))
# p <- p + geom_text(aes(y = c(5:(length(rma.fit$yi)+4)), x = (max(ciu) + abs(max(ciu))*.05),
#               label = paste0("[", round(cil, 2), ";", round(ciu, 2), "]")))
}else{
p <- p +     # adjust labels on y-axis, to display lab-abreviations
scale_y_continuous(breaks = c(1, (5:(length(rma.fit$yi)+4))), labels = c("RE Model", unique(as.character(rma.data$source)))                         )
}
p
}
laymat <- matrix(c(1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2,
1, 1, 1, 1, 3, 2, 2, 2), byrow = T, ncol = 8)
AE <- Alpha_estimates.list[[27]]
AR <- Alpha_rma.list[[27]]
p <- my_forest_plot(rma.data = AE, rma.fit = AR, main.title = NULL,
x.lab = "Cronbach's Alpha", ci.lvl = .975, CI.display = FALSE)
p <- p + theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "grey"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA),
axis.text.y = element_text(size = 8))
bw_FD <- (2 * IQR(AE$Reliability))/length(AE$Reliability)^(1/3)
h <- ggplot(AE) +
geom_histogram(aes(x = Reliability),
binwidth = bw_FD,
colour = "black", fill = colours[3]) +
theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "transparent"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA)) +
labs(x = "Cronbach's Alpha", y = "Frequency")
Forest_Histogram_HH <- gridExtra::grid.arrange(p, h, textGrob(""),  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
ggsave(
plot = Forest_Histogram_HH,
filename = here("Graphics/temp_Forest_Histogram.svg"),
bg = "transparent",
width = 9.5,
height = 6.5,
units = "in"
)
laymat <- matrix(c(1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2), byrow = T, ncol = 8)
AE <- Alpha_estimates.list[[27]]
AR <- Alpha_rma.list[[27]]
p <- my_forest_plot(rma.data = AE, rma.fit = AR, main.title = NULL,
x.lab = "Cronbach's Alpha", ci.lvl = .975, CI.display = FALSE)
p <- p + theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "grey"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA),
axis.text.y = element_text(size = 8))
bw_FD <- (2 * IQR(AE$Reliability))/length(AE$Reliability)^(1/3)
h <- ggplot(AE) +
geom_histogram(aes(x = Reliability),
binwidth = bw_FD,
colour = "black", fill = colours[3]) +
theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "transparent"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA)) +
labs(x = "Cronbach's Alpha", y = "Frequency")
Forest_Histogram_HH <- gridExtra::grid.arrange(p, h, textGrob(""),  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
ggsave(
plot = Forest_Histogram_HH,
filename = here("Graphics/temp_Forest_Histogram.svg"),
bg = "transparent",
width = 9.5,
height = 6.5,
units = "in"
)
laymat <- matrix(c(1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2), byrow = T, ncol = 1)
AE <- Alpha_estimates.list[[27]]
AR <- Alpha_rma.list[[27]]
p <- my_forest_plot(rma.data = AE, rma.fit = AR, main.title = NULL,
x.lab = "Cronbach's Alpha", ci.lvl = .975, CI.display = FALSE)
p <- p + theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "grey"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA),
axis.text.y = element_text(size = 8))
bw_FD <- (2 * IQR(AE$Reliability))/length(AE$Reliability)^(1/3)
h <- ggplot(AE) +
geom_histogram(aes(x = Reliability),
binwidth = bw_FD,
colour = "black", fill = colours[3]) +
theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "transparent"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA)) +
labs(x = "Cronbach's Alpha", y = "Frequency")
Forest_Histogram_HH <- gridExtra::grid.arrange(p, h, textGrob(""),  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
ggsave(
plot = Forest_Histogram_HH,
filename = here("Graphics/temp_Forest_Histogram.svg"),
bg = "transparent",
width = 9.5,
height = 6.5,
units = "in"
)
laymat <- matrix(c(1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2), byrow = T, ncol = 11)
AE <- Alpha_estimates.list[[27]]
AR <- Alpha_rma.list[[27]]
p <- my_forest_plot(rma.data = AE, rma.fit = AR, main.title = NULL,
x.lab = "Cronbach's Alpha", ci.lvl = .975, CI.display = FALSE)
p <- p + theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "grey"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA),
axis.text.y = element_text(size = 8))
bw_FD <- (2 * IQR(AE$Reliability))/length(AE$Reliability)^(1/3)
h <- ggplot(AE) +
geom_histogram(aes(x = Reliability),
binwidth = bw_FD,
colour = "black", fill = colours[3]) +
theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "transparent"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA)) +
labs(x = "Cronbach's Alpha", y = "Frequency")
Forest_Histogram_HH <- gridExtra::grid.arrange(p, h, textGrob(""),  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
laymat
laymat <- matrix(c(1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2), byrow = T, ncol = 12)
laymat
laymat <- matrix(c(1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2), byrow = T, ncol = 12)
AE <- Alpha_estimates.list[[27]]
AR <- Alpha_rma.list[[27]]
p <- my_forest_plot(rma.data = AE, rma.fit = AR, main.title = NULL,
x.lab = "Cronbach's Alpha", ci.lvl = .975, CI.display = FALSE)
p <- p + theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "grey"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA),
axis.text.y = element_text(size = 8))
bw_FD <- (2 * IQR(AE$Reliability))/length(AE$Reliability)^(1/3)
h <- ggplot(AE) +
geom_histogram(aes(x = Reliability),
binwidth = bw_FD,
colour = "black", fill = colours[3]) +
theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "transparent"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA)) +
labs(x = "Cronbach's Alpha", y = "Frequency")
Forest_Histogram_HH <- gridExtra::grid.arrange(p, h, textGrob(""),  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
ggsave(
plot = Forest_Histogram_HH,
filename = here("Graphics/temp_Forest_Histogram.svg"),
bg = "transparent",
width = 9.5,
height = 6.5,
units = "in"
)
laymat <- matrix(c(1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2), byrow = T, ncol = 13)
AE <- Alpha_estimates.list[[27]]
AR <- Alpha_rma.list[[27]]
p <- my_forest_plot(rma.data = AE, rma.fit = AR, main.title = NULL,
x.lab = "Cronbach's Alpha", ci.lvl = .975, CI.display = FALSE)
p <- p + theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "grey"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA),
axis.text.y = element_text(size = 8))
bw_FD <- (2 * IQR(AE$Reliability))/length(AE$Reliability)^(1/3)
h <- ggplot(AE) +
geom_histogram(aes(x = Reliability),
binwidth = bw_FD,
colour = "black", fill = colours[3]) +
theme(panel.background = element_rect(fill = "transparent",
colour = NA_character_),
text = element_text(size = 17),
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.major.x = element_line(colour = "transparent"),
panel.grid.minor.y = element_line(colour = "transparent"),
panel.grid.minor.x = element_line(colour = "transparent"),
axis.line.x = element_line(colour = "transparent"),
axis.line.y = element_line(colour = "transparent"),
axis.ticks.x = element_line(colour = "transparent"),
axis.ticks.y = element_line(colour = "grey"),
plot.background = element_rect(fill = "transparent", colour = NA)) +
labs(x = "Cronbach's Alpha", y = "Frequency")
Forest_Histogram_HH <- gridExtra::grid.arrange(p, h, textGrob(""),  layout_matrix = laymat,
top = textGrob("Reliability Estimates - HEXACO HH", gp=gpar(fontsize=22)))
ggsave(
plot = Forest_Histogram_HH,
filename = here("Graphics/temp_Forest_Histogram.svg"),
bg = "transparent",
width = 9.5,
height = 6.5,
units = "in"
)
sqrt(150)
sqrt(50)
shiny::runApp()
## installing and loading MetaPipe
library(devtools)
install_github("JensFuenderich/MetaPipe/MetaPipe")
